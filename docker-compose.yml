

services:
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    env_file:
      - ./frontend/.env
    environment:
      - VITE_BASE_URL=${DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${DOMAIN}`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    ports:
      - "5173:3000"

  backend:
    build:
      context: ./backend
    container_name: backend
    env_file:
      - ./backend/.env
    environment:
      - DOMAIN=${DOMAIN}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${DOMAIN}`) && (PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`))"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    ports:
      - "8000:8000"

  postgres:
    image: postgres:13
    container_name: postgres
    env_file:
      - ./.env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    container_name: adminer
    depends_on:
      - postgres
    env_file:
      - ./.env
    environment:
      - ADMINER_DEFAULT_SERVER=${ADMINER_DEFAULT_SERVER}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`db.${DOMAIN}`)"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
    ports:
      - "8081:8080"

  traefik:
    image: traefik:v2.4
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"

volumes:
  postgres_data:

